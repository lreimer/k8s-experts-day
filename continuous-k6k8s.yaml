---
apiVersion: v1
kind: Service
metadata:
  name: influxdb-service
spec:
  type: ClusterIP
  ports:
    - port: 8086
      protocol: TCP
  selector:
    app: influxdb
---
apiVersion: v1
kind: Pod
metadata:
  name: influxdb
  labels:
    app: influxdb
spec:
  containers:
  - name: influxdb
    image: influxdb:1.8.3-alpine
    env:
      - name: INFLUXDB_DB
        value: k6
    ports:
      - name: web
        containerPort: 8086
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-service
spec:
  type: LoadBalancer
  ports:
    - port: 3000
      protocol: TCP
  selector:
    app: grafana
---
apiVersion: v1
kind: ConfigMap
metadata:
    name: datasource-config
data:
  grafana-datasource.yaml: |
    apiVersion: 1
    datasources:
      - name: k6influxdb
        type: influxdb
        access: proxy
        database: k6
        url: http://influxdb-service:8086
        isDefault: true
---
apiVersion: v1
kind: Pod
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  containers:
  - name: grafana
    image: grafana/grafana:7.3.1
    env:
      - name: GF_AUTH_ANONYMOUS_ORG_ROLE
        value: Admin
      - name: GF_AUTH_ANONYMOUS_ENABLED
        value: "true"
      - name: GF_AUTH_BASIC_ENABLED
        value: "false"
    ports:
      - name: web
        containerPort: 3000
    volumeMounts:
        - name: datasource-vol
          mountPath: /etc/grafana/provisioning/datasources/
          readOnly: true
  volumes:
    - name: datasource-vol
      configMap:
        name: datasource-config
        items:
          - key: "grafana-datasource.yaml"
            path: "datasource.yaml"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-scripts
data:
  nginx-test.js: |
    import {check, sleep, group} from "k6";
    import http from "k6/http";
    
    export let options = {
        vus: 10,
        duration: '30s',
        batchPerHost: 4,
        insecureSkipTLSVerify: true,
        thresholds: {
          'http_req_duration{kind:html}': ['avg<=250', 'p(95)<500'],
        }
    };
    
    export default function () {
        group("static", function () {
            check(http.get(`http://${__ENV.TARGET_HOSTNAME}:80`, {
                tags: {'kind': 'html'},
            }), {
                "status is 200": (res) => res.status === 200,
            });
        });
        sleep(1);
    }
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: k6-nginx-test
spec:
  schedule: "*/1 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
            - name: k6
              image: loadimpact/k6:0.28.0
              env:
                - name: K6_OUT
                  value: influxdb=http://influxdb-service:8086/k6
                - name: TARGET_HOSTNAME
                  value: nginx-service
              args:
                - run
                - /scripts/nginx-test.js
              volumeMounts:
                - name: scripts-vol
                  mountPath: /scripts
          restartPolicy: Never
          volumes:
            - name: scripts-vol
              configMap:
                name: k6-scripts